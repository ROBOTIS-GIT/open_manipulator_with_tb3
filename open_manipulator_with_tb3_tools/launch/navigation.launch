<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [waffle, waffle_pi]"/>
  <arg name="use_robot_name"       default="om_with_tb3"/>

  <arg name="use_platform"	   default="true" />
  <arg name="open_rviz"      default="true" />

  <arg name="use_ar_marker"          default="true" />
  <arg name="marker_frame_id"        default="$(arg use_robot_name)/base_footprint" />

  <arg name="map_file"       default="$(find open_manipulator_with_tb3_tools)/maps/map.yaml"/>

  <arg name="scan_topic"     default="scan_filtered"/>
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="1.5708"/>

  <group ns = "$(arg use_robot_name)">
    <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter" output="screen" >
      <rosparam command="load" file="$(find open_manipulator_with_tb3_tools)/config/scan_data_filter.yaml" />
    </node>  

    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"/>

    <include file="$(find open_manipulator_with_tb3_tools)/launch/amcl.launch">
      <arg name="use_robot_name"  value="$(arg use_robot_name)"/>
      <arg name="scan_topic"      value="$(arg scan_topic)"/>
      <arg name="initial_pose_x"  value="$(arg initial_pose_x)" />
      <arg name="initial_pose_y"  value="$(arg initial_pose_y)" />
      <arg name="initial_pose_a"  value="$(arg initial_pose_a)" />
    </include>

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />

      <rosparam file="$(find open_manipulator_with_tb3_tools)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find open_manipulator_with_tb3_tools)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find open_manipulator_with_tb3_tools)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find open_manipulator_with_tb3_tools)/config/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find open_manipulator_with_tb3_tools)/config/move_base_params.yaml" command="load" />
      <rosparam file="$(find open_manipulator_with_tb3_tools)/config/dwa_local_planner_params.yaml" command="load" />
    </node>

    <group if="$(arg use_ar_marker)">
      <include file="$(find open_manipulator_ar_markers)/launch/ar_pose.launch">
        <arg name="use_platform"	    value="$(arg use_platform)" />
        <arg name="use_robot_name"    value="$(arg use_robot_name)"/>
        <arg name="use_state_publisher" value="false"/>
        <arg name="open_rviz"       value="false"/>
        <arg name="marker_frame_id" value="$(arg marker_frame_id)"/>
        <arg name="camera_model" value="raspicam"/>
        <arg name="camera_namespace" value="camera"/>
        <!-- <arg name="rgb_camera_info_url" value=""/> -->
        <!-- <arg name="depth_camera_info_url" value=""/> -->
      </include>
    </group>
  </group>

  <group if="$(arg open_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find open_manipulator_with_tb3_tools)/rviz/open_manipulator_with_tb3_navigation.rviz" output="screen">
      <remap from="initialpose"  to="$(arg use_robot_name)/initialpose"/>
      <remap from="move_base_simple/goal"  to="$(arg use_robot_name)/move_base_simple/goal"/>
    </node>
  </group>
</launch>
